// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Data.Migrations
{
    [DbContext(typeof(ApiContext))]
    partial class ApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdInstructorFk")
                        .HasColumnType("int")
                        .HasColumnName("idInstructorFk");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("descripcion");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("img");

                    b.HasKey("Id")
                        .HasName("PK__curso__3213E83F117E3898");

                    b.HasIndex("IdInstructorFk");

                    b.HasIndex(new[] { "Id", "Nombre" }, "index_4");

                    b.ToTable("curso", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PK__estado__3213E83F72621988");

                    b.HasIndex(new[] { "Id" }, "index_5");

                    b.ToTable("estado", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUserFk")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("roleName");

                    b.HasKey("Id");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("correo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("PK__user__3213E83FA57CA06D");

                    b.HasIndex(new[] { "Id" }, "index_1");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.UserCurso", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idUserFk");

                    b.Property<int>("IdCursoFk")
                        .HasColumnType("int")
                        .HasColumnName("idCursoFk");

                    b.Property<int?>("Calificacion")
                        .HasColumnType("int")
                        .HasColumnName("calificacion");

                    b.Property<string>("Comentario")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("comentario");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnType("int")
                        .HasColumnName("idEstadoFk");

                    b.HasKey("Id", "IdCursoFk")
                        .HasName("PK__usercurs__0C6128E894DD7FFB");

                    b.HasIndex("IdCursoFk");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex(new[] { "Id", "IdCursoFk", "IdEstadoFk", "Calificacion" }, "index_6");

                    b.ToTable("usercurso", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.UserRole", b =>
                {
                    b.Property<int>("idUserFk")
                        .HasColumnType("int");

                    b.Property<int>("idRoleFk")
                        .HasColumnType("int");

                    b.Property<int>("IdRoleFk")
                        .HasColumnType("int");

                    b.Property<int>("IdUserFk")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("idUserFk", "idRoleFk")
                        .HasName("PK__userrol__48BE068FEF27E1B7");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.HasIndex("idRoleFk");

                    b.ToTable("userrole", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Curso", b =>
                {
                    b.HasOne("Domain.Entities.User", "IdInstructorFkNavigation")
                        .WithMany("Cursos")
                        .HasForeignKey("IdInstructorFk")
                        .IsRequired()
                        .HasConstraintName("FK__curso__idInstruc__4222D4EF");

                    b.Navigation("IdInstructorFkNavigation");
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.UserCurso", b =>
                {
                    b.HasOne("Domain.Entities.User", "IdUserFkNavigation")
                        .WithMany("Usercursos")
                        .HasForeignKey("Id")
                        .IsRequired()
                        .HasConstraintName("FK__usercurso__idUse__46E78A0C");

                    b.HasOne("Domain.Entities.Curso", "IdCursoFkNavigation")
                        .WithMany("Usercursos")
                        .HasForeignKey("IdCursoFk")
                        .IsRequired()
                        .HasConstraintName("FK__usercurso__idCur__47DBAE45");

                    b.HasOne("Domain.Entities.Estado", "IdEstadoFkNavigation")
                        .WithMany("Usercursos")
                        .HasForeignKey("IdEstadoFk")
                        .IsRequired()
                        .HasConstraintName("FK__usercurso__idEst__48CFD27E");

                    b.Navigation("IdCursoFkNavigation");

                    b.Navigation("IdEstadoFkNavigation");

                    b.Navigation("IdUserFkNavigation");
                });

            modelBuilder.Entity("Domain.Entities.UserRole", b =>
                {
                    b.HasOne("Domain.Entities.Role", "Role")
                        .WithMany("RolesUsers")
                        .HasForeignKey("RoleId");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("UsersRoles")
                        .HasForeignKey("UserId");

                    b.HasOne("Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("idRoleFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__userrol__idRolFk__3E52440B");

                    b.HasOne("Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("idUserFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__userrol__idUserF__3F466844");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Curso", b =>
                {
                    b.Navigation("Usercursos");
                });

            modelBuilder.Entity("Domain.Entities.Estado", b =>
                {
                    b.Navigation("Usercursos");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Navigation("RolesUsers");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Cursos");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Usercursos");

                    b.Navigation("UsersRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
